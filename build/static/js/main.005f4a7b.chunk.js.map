{"version":3,"sources":["components/PersonForm.js","components/People.js","components/Filter.js","components/Notification.js","services/people.js","App.js","index.js"],"names":["PersonForm","name","number","onNameChange","onNumberChange","onSubmit","value","onChange","type","People","data","onDelete","map","id","key","onClick","Filter","text","filter","Notification","notification","content","className","DBURL","axios","get","then","newData","post","put","delete","App","useState","people","setPeople","newName","setNewName","setNumber","setFilter","setNotification","handleChange","setState","event","target","showNotification","setTimeout","filteredPeople","trim","toLocaleLowerCase","includes","useEffect","peopleService","preventDefault","addedPerson","find","window","confirm","updatedPerson","newPeople","catch","error","response","idToDelete","status","message","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.005f4a7b.chunk.js","sourcesContent":["import * as React from 'react'\r\n\r\nconst PersonForm = ({\r\n  name,\r\n  number,\r\n  onNameChange,\r\n  onNumberChange,\r\n  onSubmit,\r\n}) => (\r\n  <>\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name:\r\n        <input value={name} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={number} onChange={onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  </>\r\n);\r\n\r\nexport default PersonForm","import React, { Fragment } from 'react'\r\n\r\nconst People = ({ data, onDelete }) =>\r\n  data.map(({ name, number, id }) => (\r\n    <Fragment key={name + id}>\r\n      <p>\r\n        {`${name} ${number} `}\r\n        <button onClick={() => onDelete({ name, id })}>delete</button>\r\n      </p>\r\n    </Fragment>\r\n  )\r\n)\r\n\r\nexport default People\r\n","import * as React from 'react'\r\n\r\nconst Filter = ({ text, filter, onChange }) => (\r\n  <>\r\n    <div>\r\n      Search by {text}:\r\n      <input value={filter} onChange={onChange} />\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default Filter","import * as React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) return null;\r\n\r\n  const { content, type } = notification;\r\n\r\n  return <div className={type}>{content}</div>;\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst DBURL = '/api/persons'\r\n\r\nconst getAll = () => \r\n  axios\r\n    .get(DBURL)\r\n    .then(({ data }) => data)\r\n\r\nconst createOne = newData => \r\n  axios\r\n    .post(DBURL, newData)\r\n    .then(({ data }) => data)\r\n\r\nconst updateOne = (id, newData) => \r\n  axios\r\n    .put(`${DBURL}/${id}`, newData)\r\n    .then(({ data }) => data)\r\n\r\nconst deleteOne = id => \r\n  axios\r\n    .delete(`${DBURL}/${id}`)\r\n\r\nexport default { getAll, createOne, updateOne, deleteOne }","import React, { useState, useEffect } from \"react\"\r\nimport PersonForm from './components/PersonForm'\r\nimport People from './components/People'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\n\r\nimport peopleService from './services/people'\r\n\r\nconst App = () => {\r\n  const [people, setPeople] = useState([])\r\n  const [newName, setNewName] = useState(\"\")\r\n  const [number, setNumber] = useState(\"\")\r\n  const [filter, setFilter] = useState(\"\")\r\n  const [notification, setNotification] = useState(null)\r\n\r\n  const handleChange = (setState) =>\r\n    (event) =>\r\n      setState(event.target.value)\r\n  \r\n  const showNotification = (content, type = 'success') => {\r\n    setNotification({\r\n      content,\r\n      type\r\n    })\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 3000)\r\n  }\r\n\r\n  const handleDelete = ({ name, id: idToDelete }) => {\r\n    const isConfirmed = window.confirm(`Delete ${name}?`)\r\n    \r\n    if(!isConfirmed) return\r\n\r\n    peopleService\r\n      .deleteOne(idToDelete)\r\n      .then(() => {\r\n        setPeople(people.filter(({ id }) => id !== idToDelete))\r\n\r\n        showNotification('Contact succesfully deleted', 'success')\r\n      })\r\n      .catch(error => {\r\n        if(error.response.status === '404') {\r\n          setPeople(people.filter(({ id }) => id !== idToDelete))\r\n          showNotification(`Information of ${name} has already been removed from server`, 'error')\r\n          return \r\n        }\r\n        if(error.message.includes('Error')) {\r\n          console.error(`Unable to delete contact: ${error}`)\r\n          showNotification(`Something went wrong, try refreshing the page :(`, 'error')\r\n          return \r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    const addedPerson = people.find(({ name }) => name === newName)\r\n    \r\n    if(addedPerson) {\r\n      const confirmUpdate = window.confirm(`${addedPerson.name} is already added to phonebook, replace the old number with a new one?`)\r\n      \r\n      if(!confirmUpdate) return\r\n\r\n      return peopleService\r\n        .updateOne(\r\n          addedPerson.id, \r\n          { \r\n            ...addedPerson,\r\n            number\r\n          }\r\n        )\r\n        .then(updatedPerson => {\r\n          const newPeople = [...people]\r\n          const personRef = newPeople.find(({ id }) => id === updatedPerson.id)\r\n          personRef.number = number\r\n          \r\n          setPeople(newPeople)\r\n\r\n          setNewName(\"\");\r\n          setNumber(\"\");\r\n          showNotification(`Updated ${updatedPerson.name}`, 'success')\r\n        })\r\n        .catch(error => {\r\n          showNotification(error.response.data.error, 'error')\r\n        })\r\n    }\r\n\r\n    peopleService\r\n      .createOne({\r\n        name: newName,\r\n        number,\r\n      })\r\n      .then(({ name, number, id }) => {\r\n        setPeople((people) => [\r\n          ...people,\r\n          {\r\n            name,\r\n            number,\r\n            id,\r\n          },\r\n        ]);\r\n\r\n        setNewName(\"\");\r\n        setNumber(\"\");\r\n        showNotification(`Added ${name}`, \"success\");\r\n      })\r\n      .catch(error => {\r\n        showNotification(error.response.data.error, \"error\");\r\n      });\r\n  }\r\n\r\n  let filteredPeople = people\r\n\r\n  if(filter.trim()) {\r\n    filteredPeople = people.filter(({ name }) => \r\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    peopleService\r\n      .getAll()\r\n      .then(data => {\r\n        setPeople(data)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter \r\n        text='name'\r\n        filter={filter}\r\n        onChange={handleChange(setFilter)}\r\n      />\r\n      <h3>Add a new</h3>\r\n      <PersonForm \r\n        name={newName}\r\n        number={number}\r\n        onSubmit={handleSubmit}\r\n        onNameChange={handleChange(setNewName)}\r\n        onNumberChange={handleChange(setNumber)}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <People \r\n        data={filteredPeople} \r\n        onDelete={handleDelete}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}